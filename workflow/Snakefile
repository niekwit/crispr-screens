import pandas as pd
import datetime
include: "scripts/general_functions.smk"
from snakemake.utils import min_version
from snakemake.utils import validate

# Set minimum snakemake version
min_version("7.24.0")

# Define reoprt file
report: "report/workflow.rst"

# Load config file
configfile: "config/config.yml"
validate(config, "schemas/config.schema.yaml")

# Load and validate stas.csv
stats = pd.read_csv("config/stats.csv")
validate(stats, "schemas/stats.schema.yaml")

# Get all sample names
SAMPLES = sample_names()

# Load fasta
fasta = fasta()
lib_name = lib_name()

# Load which stats to apply
skip_stats = config["stats"]["skip"]

# Load stats comparisons
M_COMPARISONS, B_COMPARISONS = comparisons()

# Import rules
include: "rules/qc.smk"
include: "rules/trim.smk"
include: "rules/count.smk"
include: "rules/stats.smk"

# Set target rule
rule all:
    input:
        targets()

# Save snakemake terminal output to log file
time = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
snake_log = f"logs/snakemake/{time}_snakemake.log"
os.makedirs("logs/snakemake", exist_ok=True)

onsuccess: 
    shell("cp -v {log} {snake_log}")
    print("Analysis finished successfully!")

onerror:
    shell("cp -v {log} {snake_log}")
    print(f"Analysis failed...\nCheck {snake_log} for details")


